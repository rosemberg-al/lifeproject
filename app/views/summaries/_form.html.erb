<div class="box box-primary">
<div class="box box-default">
<div class="box-body">
  <div class="row col-md-12">
    <div class="col-md-6   <%= error_div @summary, :description %>">

        <%= f.label :description %> <br>
        <%= f.text_field :description,  :class => "form-control" %>
        <%= error_tag @summary, :description %>

    </div>


    <div class="col-md-3   <%= error_div @summary, :type_summary %>">
        <%= f.label :type_summary %> <br>
        <%=
        f.select :type_summary, Summary.summary_types.keys.map { |key,_| [t("enums.summary_type.#{key}"), key] },{ include_blank: true } ,:class => "form-control"
        %>
        <%= error_tag @summary, :type_summary %>
    </div>

  </div>


  <div class="row col-md-12">
    <div class="col-md-12   <%= error_div @summary, :text %>">
        <%= f.label :text %> <br>
        <%= f.text_area :text, cols: 20, rows: 10 ,:class => "form-control" %>
        <%= error_tag @summary, :text %>
    </div>
  </div>


  <div class="row col-md-12" style="display: none;" id="text_alert">
    <br>
    <div class="row col-md-3">
      <div class="callout callout-info">
        <p>Text was saved...</p>
      </div>
    </div
  </div>
</div>
</div>
</div>








<div class="box box-danger">
<div class="box box-default">
<div class="row col-md-12">
<div class="row col-md-12">
<h4><%= t '.summary_contents' %></h4>
</div>
</div>
<div class="box-body">
<div class="row" id="summary_contents_div">
<%= f.fields_for :summary_contents do |cp| %>
   <%= render 'summary_content_fields', f: cp %>
<% end %>
</div>
<br>

<%= link_to_add_association t('.add_content'), f, :summary_contents, :class => 'btn btn-primary' %>
</div>

</div>
</div>







<div class="box box-danger">
<div class="box box-default">
<div class="row col-md-12">
<div class="row col-md-12">
<h4><%= t '.summary_people' %></h4>
</div>
</div>
<div class="box-body">
<div class="row" id="summary_people_div">
<%= f.fields_for :summary_people do |cp| %>
   <%= render 'summary_person_fields', f: cp %>
<% end %>
</div>
<br>

<%= link_to_add_association t('.add_person'), f, :summary_people, :class => 'btn btn-primary' %>
</div>

</div>
</div>








<% content_for :javascript do %>

$(".remove_fields").on("click", function() {return confirm("<%= t('dialogs.remove_confim') %>") ;});

$(function () {

  // Replace the textarea  with a CKEditor
  // instance, using default configuration.

   CKEDITOR.replace('summary_text');


   //bootstrap WYSIHTML5 - text editor
   //$('#summary_text').wysihtml5()
 })










 $(document).on("cocoon:after-insert",   function(e, inserted_item) {

   $(".remove_fields").on("click", function() {return confirm("<%= t('dialogs.remove_confim') %>") ;});

   $("[id^=summary_summary_contents_attributes_]").on("focus", function() {
         $(this).autocomplete({



           source: function( request, response ) {
             $.ajax({
               url: "<%= content_json_path %>",
               dataType: "json",
               method : 'GET',
               data: {
                 description: request.term
               },
               success: function( data ) {
                 response( data);
               },
               error : function(xhr, status) {
                 alert('It happened some error, please try again later...');
                 }
             });
           },
           minLength: 3,
           select: function( event, ui ) {

             $(this).val(ui.item.name);

             var idAutoComplete=$(this).attr("id");
             idAutoComplete=idAutoComplete.replace("summary_summary_contents_attributes_","");
             idAutoComplete=idAutoComplete.replace("_content_description","");

             $("#summary_summary_contents_attributes_"+idAutoComplete+"_content_id").val(ui.item.id);
             console.log($("#summary_summary_contents_attributes_"+idAutoComplete+"_content_id").val()+"A");
           },
           change: function( event, ui ) {
             if(ui.item){

             }else{
               //caso nao selecione nenhuma linha, limpa tudo

               var idAutoComplete=$(this).attr("id");
               idAutoComplete=idAutoComplete.replace("summary_summary_contents_attributes_","");
               idAutoComplete=idAutoComplete.replace("_content_description","");

               $("#summary_summary_contents_attributes_"+idAutoComplete+"_content_id").val("");
               $(this).val('');
             }
           }
         });
     });
 })





   $("[id^=summary_summary_contents_attributes_]").on("focus", function() {
     $(this).autocomplete({



       source: function( request, response ) {
         $.ajax({
           url: "<%= content_json_path %>",
           dataType: "json",
           method : 'GET',
           data: {
             description: request.term
           },
           success: function( data ) {
             response( data);
           },
           error : function(xhr, status) {
             alert('It happened some error, please try again later...');
             }
         });
       },
       minLength: 3,
       select: function( event, ui ) {

         $(this).val(ui.item.name);

         var idAutoComplete=$(this).attr("id");
         idAutoComplete=idAutoComplete.replace("summary_summary_contents_attributes_","");
         idAutoComplete=idAutoComplete.replace("_content_description","");

         $("#summary_summary_contents_attributes_"+idAutoComplete+"_content_id").val(ui.item.id);
         console.log($("#summary_summary_contents_attributes_"+idAutoComplete+"_content_id").val()+"A");
       },
       change: function( event, ui ) {
         if(ui.item){

         }else{
           //caso nao selecione nenhuma linha, limpa tudo

           var idAutoComplete=$(this).attr("id");
           idAutoComplete=idAutoComplete.replace("summary_summary_contents_attributes_","");
           idAutoComplete=idAutoComplete.replace("_content_description","");

           $("#summary_summary_contents_attributes_"+idAutoComplete+"_content_id").val("");
           $(this).val('');
         }
       }
     });
 });







//person


$(function() {
  $("[id^=summary_summary_people_attributes_]").on("focus", function() {
    $(this).autocomplete({

      source: function( request, response ) {
        $.ajax({
          url: "<%= person_json_path %>",
          dataType: "json",
          method : 'GET',
          data: {
            name: request.term
          },
          success: function( data ) {
            response( data);
          },
          error : function(xhr, status) {
            alert('It happened some error, please try again later...');
            }
        });
      },
      minLength: 3,
      select: function( event, ui ) {

        $(this).val(ui.item.name);

        var idAutoComplete=$(this).attr("id");
        idAutoComplete=idAutoComplete.replace("summary_summary_people_attributes_","");
        idAutoComplete=idAutoComplete.replace("_person_name","");
        console.log(idAutoComplete);

        $("#summary_summary_people_attributes_"+idAutoComplete+"_person_id").val(ui.item.id);
        console.log($("#summary_summary_people_attributes_"+idAutoComplete+"_person_id").val()+"A");
      },
      change: function( event, ui ) {
        if(ui.item){

        }else{
          //caso nao selecione nenhuma linha, limpa tudo


          $(this).val('');
        }
      }
    });
});
});










//it was added here to make the event focus works on the new itens added to the form
//research if there is another better alternative
$(document).on("cocoon:after-insert",   function(e, inserted_item) {

    //var oi=inserted_item.find('input:hidden:eq(0)').attr("id");
    //console.log("A");
    //console.log(oi);
    //inserted_item.replace('new_content_item','1000000000000000')

    $(function() {
      $("[id^=summary_summary_people_attributes_]").on("focus", function() {
        $(this).autocomplete({

          source: function( request, response ) {
            $.ajax({
              url: "<%= person_json_path %>",
              dataType: "json",
              method : 'GET',
              data: {
                name: request.term
              },
              success: function( data ) {
                response( data);
              },
              error : function(xhr, status) {
                alert('It happened some error, please try again later...');
                }
            });
          },
          minLength: 3,
          select: function( event, ui ) {

            $(this).val(ui.item.name);

            var idAutoComplete=$(this).attr("id");
            idAutoComplete=idAutoComplete.replace("summary_summary_people_attributes_","");
            idAutoComplete=idAutoComplete.replace("_person_name","");
            console.log(idAutoComplete);

            $("#summary_summary_people_attributes_"+idAutoComplete+"_person_id").val(ui.item.id);
            console.log($("#summary_summary_people_attributes_"+idAutoComplete+"_person_id").val()+"A");
          },
          change: function( event, ui ) {
            if(ui.item){

            }else{
              //caso nao selecione nenhuma linha, limpa tudo


              $(this).val('');
              $("#summary_summary_people_attributes_"+idAutoComplete+"_person_id").val('');
            }
          }
        });
    });
  });

} )




<% end %>
