<div class="box box-primary">
<div class="box box-default">
<div class="box-body">


<div class="row col-md-12">
  <div class="col-md-3   <%= error_div @quotation, :type_quote %>">
      <%= f.label :type_quote %> <br>
      <%=
      f.select :type_quote, Quotation.quotation_types.keys.map { |key,_| [t("enums.quotation_type.#{key}"), key] },{ include_blank: true } ,:class => "form-control"
      %>
      <%= error_tag @quotation, :type_quote %>
  </div>


  <div class="col-md-3   <%= error_div @quotation, :indication %>">
      <%= f.label :indication %> <br>
      <%=
      f.select :indication, Quotation.quotation_indications.keys.map { |key,_| [t("enums.quotation_indication.#{key}"), key] },{ include_blank: true } ,:class => "form-control"
      %>
      <%= error_tag @quotation, :indication %>
  </div>
</div>



  <div class="row col-md-12">
    <div class="col-md-12   <%= error_div @quotation, :quotation %>">
        <%= f.label :quotation %> <br>
        <%= f.text_area :quotation, cols: 20, rows: 10 ,:class => "form-control" %>
        <%= error_tag @quotation, :quotation %>
    </div>
  </div>

  <div class="row col-md-12">
    <div class="col-md-4 ">

        <%= f.label :content %><br>
        <%= f.hidden_field :content_id %>
        <%= f.text_field :content_description, :class => "form-control" %>
        <%= error_tag @quotation, "content_id" %>
    </div>

    <div class="col-md-4   <%= error_div @quotation, :order %>">

        <%= f.label :order %> <br>
        <%= f.text_field :order, {:class => "form-control"} %>
        <%= error_tag @quotation, :order %>

    </div>
  </div>


  <div class="row col-md-12">
    <div class="col-md-4   <%= error_div @quotation, :page_initial %>">

        <%= f.label :page_initial %> <br>
        <%= f.text_field :page_initial, {:class => "form-control"} %>
        <%= error_tag @quotation, :page_initial %>

    </div>
    <div class="col-md-4   <%= error_div @quotation, :page_final %>">

        <%= f.label :page_final %> <br>
        <%= f.text_field :page_final, {:class => "form-control"} %>
        <%= error_tag @quotation, :page_final %>

    </div>
  </div>


</div>
</div>
</div>









<div class="box box-danger">
<div class="box box-default">
<div class="row col-md-12">
<div class="row col-md-12">
<h4><%= t '.quotation_people' %></h4>

</div>
</div>
<div class="box-body">
<div class="row" id="quotation_people_div">
<%= hidden_field_tag "quotation[size_people]", @quotation.quotation_people.size %>
<%= f.fields_for :quotation_people do |cp| %>
   <%= render 'quotation_person_fields', f: cp %>
<% end %>
</div>
<br>
<%= link_to_add_association t('.add_person'), f, :quotation_people, :class => 'btn btn-primary' %>
</div>

</div>
</div>



<% content_for :javascript do %>

$(".remove_fields").on("click", function() {return confirm("<%= t('dialogs.remove_confim') %>") ;});

$(function () {

  // Replace the textarea  with a CKEditor
  // instance, using default configuration.

   CKEDITOR.replace('quotation_quotation');

   //bootstrap WYSIHTML5 - text editor
  // $('#quotation_quotation').wysihtml5()
 })



$("#quotation_page_initial").change(function() {
  $("#quotation_page_final").val( $("#quotation_page_initial").val() );
});




 $("#quotation_content_description").autocomplete({

   source: function( request, response ) {
     $.ajax({
       url: "<%= content_json_path %>",
       dataType: "json",
       method : 'GET',
       data: {
         description: request.term
       },
       success: function( data ) {
         response( data);
       },
       error : function(xhr, status) {
         alert('It happened some error, please try again later...');
         }
     });
   },
   minLength: 3,
   select: function( event, ui ) {

     $("#quotation_content_id").val(ui.item.id);
     $("#quotation_content_description").val(ui.item.label);
   },
   change: function( event, ui ) {
     if(ui.item){

     }else{
       //caso nao selecione nenhuma linha, limpa tudo

       $("#quotation_content_id").val('');
       $("#quotation_content_description").val('');
     }
   }
 });






 $("[id$=_person_name_quote]").on("focus", function() {
   $(this).autocomplete({
   source: function( request, response ) {
     $.ajax({
       url: "<%= person_json_path %>",
       dataType: "json",
       method : 'GET',
       data: {
         name: request.term
       },
       success: function( data ) {
         response( data);
       },
       error : function(xhr, status) {
         alert('It happened some error, please try again later...');
         }
     });
   },
   minLength: 3,
   select: function( event, ui ) {

     $(this).val(ui.item.name);

     var idAutoComplete=$(this).attr("id");
     idAutoComplete=idAutoComplete.replace("quotation_quotation_people_attributes_","");
     idAutoComplete=idAutoComplete.replace("_person_name_quote","");
     console.log(idAutoComplete);

     $("#quotation_quotation_people_attributes_"+idAutoComplete+"_person_id").val(ui.item.id);
     console.log($("#quotation_quotation_people_attributes_"+idAutoComplete+"_person_id").val()+"A");

   },
   change: function( event, ui ) {
     if(ui.item){

     }else{
       //caso nao selecione nenhuma linha, limpa tudo
       // f.options[:child_index] = f.index  -> it works the same way to get the child index form
       idAutoComplete=idAutoComplete.replace("quotation_quotation_people_attributes_","");
       idAutoComplete=idAutoComplete.replace("_person_name_quote","");
       $("#quotation_quotation_people_attributes_"+idAutoComplete+"_person_id").val('');

       $(this).val('');

     }
   }
 });
 });




 //it was added here to make the event focus works on the new itens added to the form
 //research if there is another better alternative
 $(document).on("cocoon:after-insert",   function(e, inserted_item) {

   $(".remove_fields").on("click", function() {return confirm("<%= t('dialogs.remove_confim') %>") ;});

   $("[id$=_person_name_quote]").on("focus", function() {
     $(this).autocomplete({

       source: function( request, response ) {
         $.ajax({
           url: "<%= person_json_path %>",
           dataType: "json",
           method : 'GET',
           data: {
             name: request.term
           },
           success: function( data ) {
             response( data);
           },
           error : function(xhr, status) {
             alert('It happened some error, please try again later...');
             }
         });
       },
       minLength: 3,
       select: function( event, ui ) {

         $(this).val(ui.item.name);
         var idAutoComplete=$(this).attr("id");
         idAutoComplete=idAutoComplete.replace("quotation_quotation_people_attributes_","");
         idAutoComplete=idAutoComplete.replace("_person_name_quote","");
         console.log(idAutoComplete);

         $("#quotation_quotation_people_attributes_"+idAutoComplete+"_person_id").val(ui.item.id);
         console.log($("#quotation_quotation_people_attributes_"+idAutoComplete+"_person_id").val()+"A");

       },
       change: function( event, ui ) {
         if(ui.item){

         }else{
           //caso nao selecione nenhuma linha, limpa tudo
           // f.options[:child_index] = f.index  -> it works the same way to get the child index form
           var idAutoComplete=$(this).attr("id");
           idAutoComplete=idAutoComplete.replace("quotation_quotation_people_attributes_","");
           idAutoComplete=idAutoComplete.replace("_person_name_quote","");
           $("#quotation_quotation_people_attributes_"+idAutoComplete+"_person_id").val('');
           $(this).val('');

         }
       }
     });

});
 });
<% end %>
